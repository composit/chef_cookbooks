ENV['PATH'] = "#{ENV['PATH']}:/usr/local/bin"

Bluepill.application("<%= @full_name %>", :log_file => "/var/log/bluepill/<%= @full_name %>.log") do |app|
  app.working_dir = "<%= @app_root %>/current"
  <% if @environment_vars %>
  app.environment = {<% @environment_vars.each do |k, v| %><%= "\"#{k}\" => \"#{v}\"" %><% end %>}
  <% end %>
  app.process("<%= @full_name %>") do |process|
    process.working_dir = "<%= @app_root %>/current"
    #process.start_command = "/usr/bin/env RAILS_ENV=<%= @env %> /usr/local/bin/bundle exec <%= @unicorn_binary %> -Dc <%=@node[:unicorn][:config_path] %>/<%= @full_name %> -E <%= @env %>"
    process.start_command = "/usr/bin/env RAILS_ENV=<%= @env %> <%= @unicorn_binary %> -Dc <%=@node[:unicorn][:config_path] %>/<%= @full_name %> -E <%= @env %>"
    process.stop_command = "kill -QUIT {{PID}}"
    process.restart_command = "kill -<%= @preload ? 'USR2' : 'HUP' %> {{PID}}"
    process.stdout = process.stderr = "<%= @app_root %>/shared/log/unicorn.log"
    process.pid_file = "<%= @app_root %>/shared/pids/unicorn.pid"
    process.checks :mem_usage, :every => 10.seconds, :below => <%= @memory_limit %>.megabytes, :times => [3, 5]
    process.uid = "<%= @user %>"
    process.gid = "<%= @group %>"
    process.supplementary_groups = ['rvm']

    process.start_grace_time = 30.seconds
    process.start_grace_time = 30.seconds
    process.restart_grace_time = 30.seconds

    process.checks :flapping, :times => 2, :within => 30.seconds, :retry_in => 7.seconds

    process.monitor_children do |cp|
      cp.checks :mem_usage, :every => 10, :below => <%= @memory_limit %>.megabytes, :times => [3, 5]
      process.checks :cpu_usage, :every => 10.seconds, :below => <%= @cpu_limit %>, :times => 5
      cp.stop_command = "kill -QUIT {{PID}}"
    end
  end
end
